(module (egggame sdl) *

(import (scheme)
        (chicken base)
        (chicken syntax)
        (chicken module)
        (chicken foreign)
        (srfi-4))

(foreign-declare "#include <SDL3/SDL.h>")

;; =============================================================================
;; init functions
;; =============================================================================
(define SDL_INIT_AUDIO (foreign-value "SDL_INIT_AUDIO" unsigned-integer32))
(define SDL_INIT_VIDEO (foreign-value "SDL_INIT_VIDEO" unsigned-integer32))
(define SDL_INIT_JOYSTICK (foreign-value "SDL_INIT_JOYSTICK" unsigned-integer32))
(define SDL_INIT_HAPTIC (foreign-value "SDL_INIT_HAPTIC" unsigned-integer32))
(define SDL_INIT_GAMEPAD (foreign-value "SDL_INIT_GAMEPAD" unsigned-integer32))
(define SDL_INIT_EVENTS (foreign-value "SDL_INIT_EVENTS" unsigned-integer32))
(define SDL_INIT_SENSOR (foreign-value "SDL_INIT_SENSOR" unsigned-integer32))
(define SDL_INIT_CAMERA (foreign-value "SDL_INIT_CAMERA" unsigned-integer32))

(define SDL_Init (foreign-lambda bool SDL_Init unsigned-integer32))
(define SDL_InitSubSystem (foreign-lambda bool SDL_InitSubSystem unsigned-integer32))
(define SDL_Quit (foreign-lambda void SDL_Quit))
(define SDL_QuitSubSystem (foreign-lambda void SDL_QuitSubSystem unsigned-integer32))

(define SDL_GetError (foreign-lambda c-string SDL_GetError))

;; =============================================================================
;; video functions
;; =============================================================================

(define SDL_WINDOW_FULLSCREEN (foreign-value "SDL_WINDOW_FULLSCREEN" unsigned-integer64))
(define SDL_WINDOW_OPENGL (foreign-value "SDL_WINDOW_OPENGL" unsigned-integer64))
(define SDL_WINDOW_OCCLUDED (foreign-value "SDL_WINDOW_OCCLUDED" unsigned-integer64))
(define SDL_WINDOW_HIDDEN (foreign-value "SDL_WINDOW_HIDDEN" unsigned-integer64))
(define SDL_WINDOW_BORDERLESS (foreign-value "SDL_WINDOW_BORDERLESS" unsigned-integer64))
(define SDL_WINDOW_RESIZABLE (foreign-value "SDL_WINDOW_RESIZABLE" unsigned-integer64))
(define SDL_WINDOW_MINIMIZED (foreign-value "SDL_WINDOW_MINIMIZED" unsigned-integer64))
(define SDL_WINDOW_MAXIMIZED (foreign-value "SDL_WINDOW_MAXIMIZED" unsigned-integer64))
(define SDL_WINDOW_MOUSE_GRABBED (foreign-value "SDL_WINDOW_MOUSE_GRABBED" unsigned-integer64))
(define SDL_WINDOW_INPUT_FOCUS (foreign-value "SDL_WINDOW_INPUT_FOCUS" unsigned-integer64))
(define SDL_WINDOW_MOUSE_FOCUS (foreign-value "SDL_WINDOW_MOUSE_FOCUS" unsigned-integer64))
(define SDL_WINDOW_EXTERNAL (foreign-value "SDL_WINDOW_EXTERNAL" unsigned-integer64))
(define SDL_WINDOW_MODAL (foreign-value "SDL_WINDOW_MODAL" unsigned-integer64))
(define SDL_WINDOW_HIGH_PIXEL_DENSITY (foreign-value "SDL_WINDOW_HIGH_PIXEL_DENSITY" unsigned-integer64))
(define SDL_WINDOW_MOUSE_CAPTURE (foreign-value "SDL_WINDOW_MOUSE_CAPTURE" unsigned-integer64))
(define SDL_WINDOW_MOUSE_RELATIVE_MODE (foreign-value "SDL_WINDOW_MOUSE_RELATIVE_MODE" unsigned-integer64))
(define SDL_WINDOW_ALWAYS_ON_TOP (foreign-value "SDL_WINDOW_ALWAYS_ON_TOP" unsigned-integer64))
(define SDL_WINDOW_UTILITY (foreign-value "SDL_WINDOW_UTILITY" unsigned-integer64))
(define SDL_WINDOW_TOOLTIP (foreign-value "SDL_WINDOW_TOOLTIP" unsigned-integer64))
(define SDL_WINDOW_POPUP_MENU (foreign-value "SDL_WINDOW_POPUP_MENU" unsigned-integer64))
(define SDL_WINDOW_KEYBOARD_GRABBED (foreign-value "SDL_WINDOW_KEYBOARD_GRABBED" unsigned-integer64))
(define SDL_WINDOW_VULKAN (foreign-value "SDL_WINDOW_VULKAN" unsigned-integer64))
(define SDL_WINDOW_METAL (foreign-value "SDL_WINDOW_METAL" unsigned-integer64))
(define SDL_WINDOW_TRANSPARENT (foreign-value "SDL_WINDOW_TRANSPARENT" unsigned-integer64))
(define SDL_WINDOW_NOT_FOCUSABLE (foreign-value "SDL_WINDOW_NOT_FOCUSABLE" unsigned-integer64))

(define SDL_CreateWindow
  (foreign-lambda c-pointer SDL_CreateWindow
    c-string int int unsigned-integer64))

(define-foreign-type SDL_WindowID unsigned-int32)

(define (SDL_GetWindowSizeInPixels-s32vector window)
  (let ((res (s32vector 3 4)))
    (or ((foreign-lambda* bool ((c-pointer window) (s32vector value))
           "C_return(SDL_GetWindowSizeInPixels(window, value+0, value+1));")
         window res)
        (error "failed to get window size in pixels"))
    res))

;; =============================================================================
;; opengl stuff
;; =============================================================================

(define SDL_GL_CreateContext
  (foreign-lambda c-pointer SDL_GL_CreateContext c-pointer))

(define sizeof-int (foreign-value "sizeof(int)" int))

(define SDL_GL_RED_SIZE (foreign-value "SDL_GL_RED_SIZE" int))
(define SDL_GL_GREEN_SIZE (foreign-value "SDL_GL_GREEN_SIZE" int))
(define SDL_GL_BLUE_SIZE (foreign-value "SDL_GL_BLUE_SIZE" int))
(define SDL_GL_ALPHA_SIZE (foreign-value "SDL_GL_ALPHA_SIZE" int))
(define SDL_GL_BUFFER_SIZE (foreign-value "SDL_GL_BUFFER_SIZE" int))
(define SDL_GL_DOUBLEBUFFER (foreign-value "SDL_GL_DOUBLEBUFFER" int))
(define SDL_GL_DEPTH_SIZE (foreign-value "SDL_GL_DEPTH_SIZE" int))
(define SDL_GL_STENCIL_SIZE (foreign-value "SDL_GL_STENCIL_SIZE" int))
(define SDL_GL_ACCUM_RED_SIZE (foreign-value "SDL_GL_ACCUM_RED_SIZE" int))
(define SDL_GL_ACCUM_GREEN_SIZE (foreign-value "SDL_GL_ACCUM_GREEN_SIZE" int))
(define SDL_GL_ACCUM_BLUE_SIZE (foreign-value "SDL_GL_ACCUM_BLUE_SIZE" int))
(define SDL_GL_ACCUM_ALPHA_SIZE (foreign-value "SDL_GL_ACCUM_ALPHA_SIZE" int))
(define SDL_GL_STEREO (foreign-value "SDL_GL_STEREO" int))
(define SDL_GL_MULTISAMPLEBUFFERS (foreign-value "SDL_GL_MULTISAMPLEBUFFERS" int))
(define SDL_GL_MULTISAMPLESAMPLES (foreign-value "SDL_GL_MULTISAMPLESAMPLES" int))
(define SDL_GL_ACCELERATED_VISUAL (foreign-value "SDL_GL_ACCELERATED_VISUAL" int))
(define SDL_GL_RETAINED_BACKING (foreign-value "SDL_GL_RETAINED_BACKING" int))
(define SDL_GL_CONTEXT_MAJOR_VERSION (foreign-value "SDL_GL_CONTEXT_MAJOR_VERSION" int))
(define SDL_GL_CONTEXT_MINOR_VERSION (foreign-value "SDL_GL_CONTEXT_MINOR_VERSION" int))
(define SDL_GL_CONTEXT_FLAGS (foreign-value "SDL_GL_CONTEXT_FLAGS" int))
(define SDL_GL_CONTEXT_PROFILE_MASK (foreign-value "SDL_GL_CONTEXT_PROFILE_MASK" int))
(define SDL_GL_SHARE_WITH_CURRENT_CONTEXT (foreign-value "SDL_GL_SHARE_WITH_CURRENT_CONTEXT" int))
(define SDL_GL_FRAMEBUFFER_SRGB_CAPABLE (foreign-value "SDL_GL_FRAMEBUFFER_SRGB_CAPABLE" int))
(define SDL_GL_CONTEXT_RELEASE_BEHAVIOR (foreign-value "SDL_GL_CONTEXT_RELEASE_BEHAVIOR" int))
(define SDL_GL_CONTEXT_RESET_NOTIFICATION (foreign-value "SDL_GL_CONTEXT_RESET_NOTIFICATION" int))
(define SDL_GL_CONTEXT_NO_ERROR (foreign-value "SDL_GL_CONTEXT_NO_ERROR" int))
(define SDL_GL_FLOATBUFFERS (foreign-value "SDL_GL_FLOATBUFFERS" int))
(define SDL_GL_EGL_PLATFORM (foreign-value "SDL_GL_EGL_PLATFORM" int))
(define SDL_GL_CONTEXT_DEBUG_FLAG (foreign-value "SDL_GL_CONTEXT_DEBUG_FLAG" (enum SDL_GLattr)))
(define SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG (foreign-value "SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG" (enum SDL_GLattr)))
(define SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG (foreign-value "SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG" (enum SDL_GLattr)))
(define SDL_GL_CONTEXT_RESET_ISOLATION_FLAG (foreign-value "SDL_GL_CONTEXT_RESET_ISOLATION_FLAG" (enum SDL_GLattr)))

(define (SDL_GL_GetAttribute attr)
  (unless (= sizeof-int 4) (error "this needs to be rewritten"))
  (let ((value (s32vector 234)))
    (and ((foreign-lambda* bool (((enum "SDL_GLAttr") attr) (s32vector value))
            "C_return(SDL_GL_GetAttribute(attr, value));")
          attr value)
         (s32vector-ref value 0))))

(define SDL_GL_SetAttribute (foreign-lambda bool SDL_GL_SetAttribute int int))

(define SDL_GL_SetSwapInterval (foreign-lambda bool SDL_GL_SetSwapInterval int))
(define SDL_GL_SwapWindow (foreign-lambda bool SDL_GL_SwapWindow c-pointer))

;; =============================================================================
;; event stuff
;; =============================================================================

(define SDL_PollEvent
  (foreign-lambda* bool ((u8vector ev))
    "C_return(SDL_PollEvent((SDL_Event*)ev));"))

(define sizeof-SDL_Event (foreign-value "sizeof(SDL_Event)" int))

(define (make-SDL_Event)
  (make-u8vector sizeof-SDL_Event))

(define SDL_Event-type
  (foreign-lambda* unsigned-integer32 ((u8vector ev))
    "C_return(((SDL_Event*)ev)->type);"))

(define SDL_EVENT_FIRST (foreign-value "SDL_EVENT_FIRST" unsigned-integer32))
(define SDL_EVENT_QUIT (foreign-value "SDL_EVENT_QUIT" unsigned-integer32))
(define SDL_EVENT_TERMINATING (foreign-value "SDL_EVENT_TERMINATING" unsigned-integer32))
(define SDL_EVENT_LOW_MEMORY (foreign-value "SDL_EVENT_LOW_MEMORY" unsigned-integer32))
(define SDL_EVENT_WILL_ENTER_BACKGROUND (foreign-value "SDL_EVENT_WILL_ENTER_BACKGROUND" unsigned-integer32))
(define SDL_EVENT_DID_ENTER_BACKGROUND (foreign-value "SDL_EVENT_DID_ENTER_BACKGROUND" unsigned-integer32))
(define SDL_EVENT_WILL_ENTER_FOREGROUND (foreign-value "SDL_EVENT_WILL_ENTER_FOREGROUND" unsigned-integer32))
(define SDL_EVENT_DID_ENTER_FOREGROUND (foreign-value "SDL_EVENT_DID_ENTER_FOREGROUND" unsigned-integer32))
(define SDL_EVENT_LOCALE_CHANGED (foreign-value "SDL_EVENT_LOCALE_CHANGED" unsigned-integer32))
(define SDL_EVENT_SYSTEM_THEME_CHANGED (foreign-value "SDL_EVENT_SYSTEM_THEME_CHANGED" unsigned-integer32))
(define SDL_EVENT_DISPLAY_ORIENTATION (foreign-value "SDL_EVENT_DISPLAY_ORIENTATION" unsigned-integer32))
(define SDL_EVENT_DISPLAY_ADDED (foreign-value "SDL_EVENT_DISPLAY_ADDED" unsigned-integer32))
(define SDL_EVENT_DISPLAY_REMOVED (foreign-value "SDL_EVENT_DISPLAY_REMOVED" unsigned-integer32))
(define SDL_EVENT_DISPLAY_MOVED (foreign-value "SDL_EVENT_DISPLAY_MOVED" unsigned-integer32))
(define SDL_EVENT_DISPLAY_DESKTOP_MODE_CHANGED (foreign-value "SDL_EVENT_DISPLAY_DESKTOP_MODE_CHANGED" unsigned-integer32))
(define SDL_EVENT_DISPLAY_CURRENT_MODE_CHANGED (foreign-value "SDL_EVENT_DISPLAY_CURRENT_MODE_CHANGED" unsigned-integer32))
(define SDL_EVENT_DISPLAY_CONTENT_SCALE_CHANGED (foreign-value "SDL_EVENT_DISPLAY_CONTENT_SCALE_CHANGED" unsigned-integer32))
(define SDL_EVENT_DISPLAY_ORIENTATION (foreign-value "SDL_EVENT_DISPLAY_ORIENTATION" unsigned-integer32))
(define SDL_EVENT_DISPLAY_CONTENT_SCALE_CHANGED (foreign-value "SDL_EVENT_DISPLAY_CONTENT_SCALE_CHANGED" unsigned-integer32))
(define SDL_EVENT_WINDOW_SHOWN (foreign-value "SDL_EVENT_WINDOW_SHOWN" unsigned-integer32))
(define SDL_EVENT_WINDOW_HIDDEN (foreign-value "SDL_EVENT_WINDOW_HIDDEN" unsigned-integer32))
(define SDL_EVENT_WINDOW_EXPOSED (foreign-value "SDL_EVENT_WINDOW_EXPOSED" unsigned-integer32))
(define SDL_EVENT_WINDOW_MOVED (foreign-value "SDL_EVENT_WINDOW_MOVED" unsigned-integer32))
(define SDL_EVENT_WINDOW_RESIZED (foreign-value "SDL_EVENT_WINDOW_RESIZED" unsigned-integer32))
(define SDL_EVENT_WINDOW_PIXEL_SIZE_CHANGED (foreign-value "SDL_EVENT_WINDOW_PIXEL_SIZE_CHANGED" unsigned-integer32))
(define SDL_EVENT_WINDOW_METAL_VIEW_RESIZED (foreign-value "SDL_EVENT_WINDOW_METAL_VIEW_RESIZED" unsigned-integer32))
(define SDL_EVENT_WINDOW_MINIMIZED (foreign-value "SDL_EVENT_WINDOW_MINIMIZED" unsigned-integer32))
(define SDL_EVENT_WINDOW_MAXIMIZED (foreign-value "SDL_EVENT_WINDOW_MAXIMIZED" unsigned-integer32))
(define SDL_EVENT_WINDOW_RESTORED (foreign-value "SDL_EVENT_WINDOW_RESTORED" unsigned-integer32))
(define SDL_EVENT_WINDOW_MOUSE_ENTER (foreign-value "SDL_EVENT_WINDOW_MOUSE_ENTER" unsigned-integer32))
(define SDL_EVENT_WINDOW_MOUSE_LEAVE (foreign-value "SDL_EVENT_WINDOW_MOUSE_LEAVE" unsigned-integer32))
(define SDL_EVENT_WINDOW_FOCUS_GAINED (foreign-value "SDL_EVENT_WINDOW_FOCUS_GAINED" unsigned-integer32))
(define SDL_EVENT_WINDOW_FOCUS_LOST (foreign-value "SDL_EVENT_WINDOW_FOCUS_LOST" unsigned-integer32))
(define SDL_EVENT_WINDOW_CLOSE_REQUESTED (foreign-value "SDL_EVENT_WINDOW_CLOSE_REQUESTED" unsigned-integer32))
(define SDL_EVENT_WINDOW_HIT_TEST (foreign-value "SDL_EVENT_WINDOW_HIT_TEST" unsigned-integer32))
(define SDL_EVENT_WINDOW_ICCPROF_CHANGED (foreign-value "SDL_EVENT_WINDOW_ICCPROF_CHANGED" unsigned-integer32))
(define SDL_EVENT_WINDOW_DISPLAY_CHANGED (foreign-value "SDL_EVENT_WINDOW_DISPLAY_CHANGED" unsigned-integer32))
(define SDL_EVENT_WINDOW_DISPLAY_SCALE_CHANGED (foreign-value "SDL_EVENT_WINDOW_DISPLAY_SCALE_CHANGED" unsigned-integer32))
(define SDL_EVENT_WINDOW_SAFE_AREA_CHANGED (foreign-value "SDL_EVENT_WINDOW_SAFE_AREA_CHANGED" unsigned-integer32))
(define SDL_EVENT_WINDOW_OCCLUDED (foreign-value "SDL_EVENT_WINDOW_OCCLUDED" unsigned-integer32))
(define SDL_EVENT_WINDOW_ENTER_FULLSCREEN (foreign-value "SDL_EVENT_WINDOW_ENTER_FULLSCREEN" unsigned-integer32))
(define SDL_EVENT_WINDOW_LEAVE_FULLSCREEN (foreign-value "SDL_EVENT_WINDOW_LEAVE_FULLSCREEN" unsigned-integer32))
(define SDL_EVENT_WINDOW_DESTROYED (foreign-value "SDL_EVENT_WINDOW_DESTROYED" unsigned-integer32))
(define SDL_EVENT_WINDOW_HDR_STATE_CHANGED (foreign-value "SDL_EVENT_WINDOW_HDR_STATE_CHANGED" unsigned-integer32))
(define SDL_EVENT_WINDOW_SHOWN (foreign-value "SDL_EVENT_WINDOW_SHOWN" unsigned-integer32))
(define SDL_EVENT_WINDOW_HDR_STATE_CHANGED (foreign-value "SDL_EVENT_WINDOW_HDR_STATE_CHANGED" unsigned-integer32))
(define SDL_EVENT_KEY_DOWN (foreign-value "SDL_EVENT_KEY_DOWN" unsigned-integer32))
(define SDL_EVENT_KEY_UP (foreign-value "SDL_EVENT_KEY_UP" unsigned-integer32))
(define SDL_EVENT_TEXT_EDITING (foreign-value "SDL_EVENT_TEXT_EDITING" unsigned-integer32))
(define SDL_EVENT_TEXT_INPUT (foreign-value "SDL_EVENT_TEXT_INPUT" unsigned-integer32))
(define SDL_EVENT_KEYMAP_CHANGED (foreign-value "SDL_EVENT_KEYMAP_CHANGED" unsigned-integer32))
(define SDL_EVENT_KEYBOARD_ADDED (foreign-value "SDL_EVENT_KEYBOARD_ADDED" unsigned-integer32))
(define SDL_EVENT_KEYBOARD_REMOVED (foreign-value "SDL_EVENT_KEYBOARD_REMOVED" unsigned-integer32))
(define SDL_EVENT_TEXT_EDITING_CANDIDATES (foreign-value "SDL_EVENT_TEXT_EDITING_CANDIDATES" unsigned-integer32))
(define SDL_EVENT_MOUSE_MOTION (foreign-value "SDL_EVENT_MOUSE_MOTION" unsigned-integer32))
(define SDL_EVENT_MOUSE_BUTTON_DOWN (foreign-value "SDL_EVENT_MOUSE_BUTTON_DOWN" unsigned-integer32))
(define SDL_EVENT_MOUSE_BUTTON_UP (foreign-value "SDL_EVENT_MOUSE_BUTTON_UP" unsigned-integer32))
(define SDL_EVENT_MOUSE_WHEEL (foreign-value "SDL_EVENT_MOUSE_WHEEL" unsigned-integer32))
(define SDL_EVENT_MOUSE_ADDED (foreign-value "SDL_EVENT_MOUSE_ADDED" unsigned-integer32))
(define SDL_EVENT_MOUSE_REMOVED (foreign-value "SDL_EVENT_MOUSE_REMOVED" unsigned-integer32))
(define SDL_EVENT_JOYSTICK_AXIS_MOTION (foreign-value "SDL_EVENT_JOYSTICK_AXIS_MOTION" unsigned-integer32))
(define SDL_EVENT_JOYSTICK_BALL_MOTION (foreign-value "SDL_EVENT_JOYSTICK_BALL_MOTION" unsigned-integer32))
(define SDL_EVENT_JOYSTICK_HAT_MOTION (foreign-value "SDL_EVENT_JOYSTICK_HAT_MOTION" unsigned-integer32))
(define SDL_EVENT_JOYSTICK_BUTTON_DOWN (foreign-value "SDL_EVENT_JOYSTICK_BUTTON_DOWN" unsigned-integer32))
(define SDL_EVENT_JOYSTICK_BUTTON_UP (foreign-value "SDL_EVENT_JOYSTICK_BUTTON_UP" unsigned-integer32))
(define SDL_EVENT_JOYSTICK_ADDED (foreign-value "SDL_EVENT_JOYSTICK_ADDED" unsigned-integer32))
(define SDL_EVENT_JOYSTICK_REMOVED (foreign-value "SDL_EVENT_JOYSTICK_REMOVED" unsigned-integer32))
(define SDL_EVENT_JOYSTICK_BATTERY_UPDATED (foreign-value "SDL_EVENT_JOYSTICK_BATTERY_UPDATED" unsigned-integer32))
(define SDL_EVENT_JOYSTICK_UPDATE_COMPLETE (foreign-value "SDL_EVENT_JOYSTICK_UPDATE_COMPLETE" unsigned-integer32))
(define SDL_EVENT_GAMEPAD_AXIS_MOTION (foreign-value "SDL_EVENT_GAMEPAD_AXIS_MOTION" unsigned-integer32))
(define SDL_EVENT_GAMEPAD_BUTTON_DOWN (foreign-value "SDL_EVENT_GAMEPAD_BUTTON_DOWN" unsigned-integer32))
(define SDL_EVENT_GAMEPAD_BUTTON_UP (foreign-value "SDL_EVENT_GAMEPAD_BUTTON_UP" unsigned-integer32))
(define SDL_EVENT_GAMEPAD_ADDED (foreign-value "SDL_EVENT_GAMEPAD_ADDED" unsigned-integer32))
(define SDL_EVENT_GAMEPAD_REMOVED (foreign-value "SDL_EVENT_GAMEPAD_REMOVED" unsigned-integer32))
(define SDL_EVENT_GAMEPAD_REMAPPED (foreign-value "SDL_EVENT_GAMEPAD_REMAPPED" unsigned-integer32))
(define SDL_EVENT_GAMEPAD_TOUCHPAD_DOWN (foreign-value "SDL_EVENT_GAMEPAD_TOUCHPAD_DOWN" unsigned-integer32))
(define SDL_EVENT_GAMEPAD_TOUCHPAD_MOTION (foreign-value "SDL_EVENT_GAMEPAD_TOUCHPAD_MOTION" unsigned-integer32))
(define SDL_EVENT_GAMEPAD_TOUCHPAD_UP (foreign-value "SDL_EVENT_GAMEPAD_TOUCHPAD_UP" unsigned-integer32))
(define SDL_EVENT_GAMEPAD_SENSOR_UPDATE (foreign-value "SDL_EVENT_GAMEPAD_SENSOR_UPDATE" unsigned-integer32))
(define SDL_EVENT_GAMEPAD_UPDATE_COMPLETE (foreign-value "SDL_EVENT_GAMEPAD_UPDATE_COMPLETE" unsigned-integer32))
(define SDL_EVENT_GAMEPAD_STEAM_HANDLE_UPDATED (foreign-value "SDL_EVENT_GAMEPAD_STEAM_HANDLE_UPDATED" unsigned-integer32))
(define SDL_EVENT_FINGER_DOWN (foreign-value "SDL_EVENT_FINGER_DOWN" unsigned-integer32))
(define SDL_EVENT_FINGER_UP (foreign-value "SDL_EVENT_FINGER_UP" unsigned-integer32))
(define SDL_EVENT_FINGER_MOTION (foreign-value "SDL_EVENT_FINGER_MOTION" unsigned-integer32))
(define SDL_EVENT_FINGER_CANCELED (foreign-value "SDL_EVENT_FINGER_CANCELED" unsigned-integer32))
(define SDL_EVENT_CLIPBOARD_UPDATE (foreign-value "SDL_EVENT_CLIPBOARD_UPDATE" unsigned-integer32))
(define SDL_EVENT_DROP_FILE (foreign-value "SDL_EVENT_DROP_FILE" unsigned-integer32))
(define SDL_EVENT_DROP_TEXT (foreign-value "SDL_EVENT_DROP_TEXT" unsigned-integer32))
(define SDL_EVENT_DROP_BEGIN (foreign-value "SDL_EVENT_DROP_BEGIN" unsigned-integer32))
(define SDL_EVENT_DROP_COMPLETE (foreign-value "SDL_EVENT_DROP_COMPLETE" unsigned-integer32))
(define SDL_EVENT_DROP_POSITION (foreign-value "SDL_EVENT_DROP_POSITION" unsigned-integer32))
(define SDL_EVENT_AUDIO_DEVICE_ADDED (foreign-value "SDL_EVENT_AUDIO_DEVICE_ADDED" unsigned-integer32))
(define SDL_EVENT_AUDIO_DEVICE_REMOVED (foreign-value "SDL_EVENT_AUDIO_DEVICE_REMOVED" unsigned-integer32))
(define SDL_EVENT_AUDIO_DEVICE_FORMAT_CHANGED (foreign-value "SDL_EVENT_AUDIO_DEVICE_FORMAT_CHANGED" unsigned-integer32))
(define SDL_EVENT_SENSOR_UPDATE (foreign-value "SDL_EVENT_SENSOR_UPDATE" unsigned-integer32))
(define SDL_EVENT_PEN_PROXIMITY_IN (foreign-value "SDL_EVENT_PEN_PROXIMITY_IN" unsigned-integer32))
(define SDL_EVENT_PEN_PROXIMITY_OUT (foreign-value "SDL_EVENT_PEN_PROXIMITY_OUT" unsigned-integer32))
(define SDL_EVENT_PEN_DOWN (foreign-value "SDL_EVENT_PEN_DOWN" unsigned-integer32))
(define SDL_EVENT_PEN_UP (foreign-value "SDL_EVENT_PEN_UP" unsigned-integer32))
(define SDL_EVENT_PEN_BUTTON_DOWN (foreign-value "SDL_EVENT_PEN_BUTTON_DOWN" unsigned-integer32))
(define SDL_EVENT_PEN_BUTTON_UP (foreign-value "SDL_EVENT_PEN_BUTTON_UP" unsigned-integer32))
(define SDL_EVENT_PEN_MOTION (foreign-value "SDL_EVENT_PEN_MOTION" unsigned-integer32))
(define SDL_EVENT_PEN_AXIS (foreign-value "SDL_EVENT_PEN_AXIS" unsigned-integer32))
(define SDL_EVENT_CAMERA_DEVICE_ADDED (foreign-value "SDL_EVENT_CAMERA_DEVICE_ADDED" unsigned-integer32))
(define SDL_EVENT_CAMERA_DEVICE_REMOVED (foreign-value "SDL_EVENT_CAMERA_DEVICE_REMOVED" unsigned-integer32))
(define SDL_EVENT_CAMERA_DEVICE_APPROVED (foreign-value "SDL_EVENT_CAMERA_DEVICE_APPROVED" unsigned-integer32))
(define SDL_EVENT_CAMERA_DEVICE_DENIED (foreign-value "SDL_EVENT_CAMERA_DEVICE_DENIED" unsigned-integer32))
(define SDL_EVENT_RENDER_TARGETS_RESET (foreign-value "SDL_EVENT_RENDER_TARGETS_RESET" unsigned-integer32))
(define SDL_EVENT_RENDER_DEVICE_RESET (foreign-value "SDL_EVENT_RENDER_DEVICE_RESET" unsigned-integer32))
(define SDL_EVENT_RENDER_DEVICE_LOST (foreign-value "SDL_EVENT_RENDER_DEVICE_LOST" unsigned-integer32))
(define SDL_EVENT_PRIVATE0 (foreign-value "SDL_EVENT_PRIVATE0" unsigned-integer32))
(define SDL_EVENT_PRIVATE1 (foreign-value "SDL_EVENT_PRIVATE1" unsigned-integer32))
(define SDL_EVENT_PRIVATE2 (foreign-value "SDL_EVENT_PRIVATE2" unsigned-integer32))
(define SDL_EVENT_PRIVATE3 (foreign-value "SDL_EVENT_PRIVATE3" unsigned-integer32))
(define SDL_EVENT_POLL_SENTINEL (foreign-value "SDL_EVENT_POLL_SENTINEL" unsigned-integer32))
(define SDL_EVENT_LAST (foreign-value "SDL_EVENT_LAST" unsigned-integer32))
(define SDL_EVENT_USER (foreign-value "SDL_EVENT_USER" unsigned-integer32))
(define SDL_EVENT_LAST (foreign-value "SDL_EVENT_LAST" unsigned-integer32))


;; ok syntax
;; (define-SDL_Event-getter return-type (foo bar))
;; =>
;; (define SDL_Event-foo-bar
;;   (foreign-lambda* return-type ((u8vector ev))
;;                    "C_return(((SDL_Event*)ev)->foo.bar);"))


(define-syntax define-SDL_Event-getter
  (er-macro-transformer
   (lambda (exp rename compare)
     (import (srfi-1)
             (srfi-2)
             (srfi-13)
             (chicken string)
             (chicken foreign)
             (chicken format))
     (or (and-let* ((_ (and (list? exp)
                            (= (length exp) 3)))

                    (_ (car exp))

                    (return-type (cadr exp))

                    (member-path     (and (list? (caddr exp))
                                          (every symbol? (caddr exp))
                                          (caddr exp)))
                    (member-path-c   (string-join (map ->string member-path) "."))
                    (member-path-scm (string->symbol
                                      (string-join
                                       (map ->string member-path) "-")))

                    ;; renames
                    (&define          (rename 'define))
                    (&foreign-lambda* (rename 'foreign-lambda*))

                    (scheme-identifier
                     (string->symbol (format "SDL_Event-~a" member-path-scm)))
                    (c-body-string
                     (format "C_return(((SDL_Event*)ev)->~a);" member-path-c)))
           `(,&define ,scheme-identifier
                      (,&foreign-lambda* ,return-type ((u8vector ev))
                                         ,c-body-string)))
         (error "bad define-SDL_Event-getter syntax" exp)))))


(define-foreign-type SDL_MouseID unsigned-int32)
(define-foreign-type SDL_KeyboardID unsigned-int32)
(define-foreign-type SDL_Keycode unsigned-int32)
(define-foreign-type SDL_Keymod unsigned-short)
(define-foreign-type SDL_MouseButtonFlags unsigned-int32)
(define-foreign-type Uint8 unsigned-byte)

(define-SDL_Event-getter SDL_WindowID (motion windowID))
(define-SDL_Event-getter SDL_MouseID (motion which))
(define-SDL_Event-getter SDL_MouseButtonFlags (motion state))
(define-SDL_Event-getter float (motion x))
(define-SDL_Event-getter float (motion y))
(define-SDL_Event-getter float (motion xrel))
(define-SDL_Event-getter float (motion yrel))

(define-SDL_Event-getter SDL_WindowID (button windowID))
(define-SDL_Event-getter SDL_MouseID (button which))
(define-SDL_Event-getter Uint8 (button button))
(define-SDL_Event-getter bool (button down))
(define-SDL_Event-getter Uint8 (button clicks))
(define-SDL_Event-getter float (button x))
(define-SDL_Event-getter float (button y))

;; keyboard stuff

(define SDL_SCANCODE_UNKNOWN (foreign-value "SDL_SCANCODE_UNKNOWN" (enum SDL_Scancode)))
(define SDL_SCANCODE_A (foreign-value "SDL_SCANCODE_A" (enum SDL_Scancode)))
(define SDL_SCANCODE_B (foreign-value "SDL_SCANCODE_B" (enum SDL_Scancode)))
(define SDL_SCANCODE_C (foreign-value "SDL_SCANCODE_C" (enum SDL_Scancode)))
(define SDL_SCANCODE_D (foreign-value "SDL_SCANCODE_D" (enum SDL_Scancode)))
(define SDL_SCANCODE_E (foreign-value "SDL_SCANCODE_E" (enum SDL_Scancode)))
(define SDL_SCANCODE_F (foreign-value "SDL_SCANCODE_F" (enum SDL_Scancode)))
(define SDL_SCANCODE_G (foreign-value "SDL_SCANCODE_G" (enum SDL_Scancode)))
(define SDL_SCANCODE_H (foreign-value "SDL_SCANCODE_H" (enum SDL_Scancode)))
(define SDL_SCANCODE_I (foreign-value "SDL_SCANCODE_I" (enum SDL_Scancode)))
(define SDL_SCANCODE_J (foreign-value "SDL_SCANCODE_J" (enum SDL_Scancode)))
(define SDL_SCANCODE_K (foreign-value "SDL_SCANCODE_K" (enum SDL_Scancode)))
(define SDL_SCANCODE_L (foreign-value "SDL_SCANCODE_L" (enum SDL_Scancode)))
(define SDL_SCANCODE_M (foreign-value "SDL_SCANCODE_M" (enum SDL_Scancode)))
(define SDL_SCANCODE_N (foreign-value "SDL_SCANCODE_N" (enum SDL_Scancode)))
(define SDL_SCANCODE_O (foreign-value "SDL_SCANCODE_O" (enum SDL_Scancode)))
(define SDL_SCANCODE_P (foreign-value "SDL_SCANCODE_P" (enum SDL_Scancode)))
(define SDL_SCANCODE_Q (foreign-value "SDL_SCANCODE_Q" (enum SDL_Scancode)))
(define SDL_SCANCODE_R (foreign-value "SDL_SCANCODE_R" (enum SDL_Scancode)))
(define SDL_SCANCODE_S (foreign-value "SDL_SCANCODE_S" (enum SDL_Scancode)))
(define SDL_SCANCODE_T (foreign-value "SDL_SCANCODE_T" (enum SDL_Scancode)))
(define SDL_SCANCODE_U (foreign-value "SDL_SCANCODE_U" (enum SDL_Scancode)))
(define SDL_SCANCODE_V (foreign-value "SDL_SCANCODE_V" (enum SDL_Scancode)))
(define SDL_SCANCODE_W (foreign-value "SDL_SCANCODE_W" (enum SDL_Scancode)))
(define SDL_SCANCODE_X (foreign-value "SDL_SCANCODE_X" (enum SDL_Scancode)))
(define SDL_SCANCODE_Y (foreign-value "SDL_SCANCODE_Y" (enum SDL_Scancode)))
(define SDL_SCANCODE_Z (foreign-value "SDL_SCANCODE_Z" (enum SDL_Scancode)))
(define SDL_SCANCODE_1 (foreign-value "SDL_SCANCODE_1" (enum SDL_Scancode)))
(define SDL_SCANCODE_2 (foreign-value "SDL_SCANCODE_2" (enum SDL_Scancode)))
(define SDL_SCANCODE_3 (foreign-value "SDL_SCANCODE_3" (enum SDL_Scancode)))
(define SDL_SCANCODE_4 (foreign-value "SDL_SCANCODE_4" (enum SDL_Scancode)))
(define SDL_SCANCODE_5 (foreign-value "SDL_SCANCODE_5" (enum SDL_Scancode)))
(define SDL_SCANCODE_6 (foreign-value "SDL_SCANCODE_6" (enum SDL_Scancode)))
(define SDL_SCANCODE_7 (foreign-value "SDL_SCANCODE_7" (enum SDL_Scancode)))
(define SDL_SCANCODE_8 (foreign-value "SDL_SCANCODE_8" (enum SDL_Scancode)))
(define SDL_SCANCODE_9 (foreign-value "SDL_SCANCODE_9" (enum SDL_Scancode)))
(define SDL_SCANCODE_0 (foreign-value "SDL_SCANCODE_0" (enum SDL_Scancode)))
(define SDL_SCANCODE_RETURN (foreign-value "SDL_SCANCODE_RETURN" (enum SDL_Scancode)))
(define SDL_SCANCODE_ESCAPE (foreign-value "SDL_SCANCODE_ESCAPE" (enum SDL_Scancode)))
(define SDL_SCANCODE_BACKSPACE (foreign-value "SDL_SCANCODE_BACKSPACE" (enum SDL_Scancode)))
(define SDL_SCANCODE_TAB (foreign-value "SDL_SCANCODE_TAB" (enum SDL_Scancode)))
(define SDL_SCANCODE_SPACE (foreign-value "SDL_SCANCODE_SPACE" (enum SDL_Scancode)))
(define SDL_SCANCODE_MINUS (foreign-value "SDL_SCANCODE_MINUS" (enum SDL_Scancode)))
(define SDL_SCANCODE_EQUALS (foreign-value "SDL_SCANCODE_EQUALS" (enum SDL_Scancode)))
(define SDL_SCANCODE_LEFTBRACKET (foreign-value "SDL_SCANCODE_LEFTBRACKET" (enum SDL_Scancode)))
(define SDL_SCANCODE_RIGHTBRACKET (foreign-value "SDL_SCANCODE_RIGHTBRACKET" (enum SDL_Scancode)))
(define SDL_SCANCODE_BACKSLASH (foreign-value "SDL_SCANCODE_BACKSLASH" (enum SDL_Scancode)))
(define SDL_SCANCODE_NONUSHASH (foreign-value "SDL_SCANCODE_NONUSHASH" (enum SDL_Scancode)))
(define SDL_SCANCODE_SEMICOLON (foreign-value "SDL_SCANCODE_SEMICOLON" (enum SDL_Scancode)))
(define SDL_SCANCODE_APOSTROPHE (foreign-value "SDL_SCANCODE_APOSTROPHE" (enum SDL_Scancode)))
(define SDL_SCANCODE_GRAVE (foreign-value "SDL_SCANCODE_GRAVE" (enum SDL_Scancode)))
(define SDL_SCANCODE_COMMA (foreign-value "SDL_SCANCODE_COMMA" (enum SDL_Scancode)))
(define SDL_SCANCODE_PERIOD (foreign-value "SDL_SCANCODE_PERIOD" (enum SDL_Scancode)))
(define SDL_SCANCODE_SLASH (foreign-value "SDL_SCANCODE_SLASH" (enum SDL_Scancode)))
(define SDL_SCANCODE_CAPSLOCK (foreign-value "SDL_SCANCODE_CAPSLOCK" (enum SDL_Scancode)))
(define SDL_SCANCODE_F1 (foreign-value "SDL_SCANCODE_F1" (enum SDL_Scancode)))
(define SDL_SCANCODE_F2 (foreign-value "SDL_SCANCODE_F2" (enum SDL_Scancode)))
(define SDL_SCANCODE_F3 (foreign-value "SDL_SCANCODE_F3" (enum SDL_Scancode)))
(define SDL_SCANCODE_F4 (foreign-value "SDL_SCANCODE_F4" (enum SDL_Scancode)))
(define SDL_SCANCODE_F5 (foreign-value "SDL_SCANCODE_F5" (enum SDL_Scancode)))
(define SDL_SCANCODE_F6 (foreign-value "SDL_SCANCODE_F6" (enum SDL_Scancode)))
(define SDL_SCANCODE_F7 (foreign-value "SDL_SCANCODE_F7" (enum SDL_Scancode)))
(define SDL_SCANCODE_F8 (foreign-value "SDL_SCANCODE_F8" (enum SDL_Scancode)))
(define SDL_SCANCODE_F9 (foreign-value "SDL_SCANCODE_F9" (enum SDL_Scancode)))
(define SDL_SCANCODE_F10 (foreign-value "SDL_SCANCODE_F10" (enum SDL_Scancode)))
(define SDL_SCANCODE_F11 (foreign-value "SDL_SCANCODE_F11" (enum SDL_Scancode)))
(define SDL_SCANCODE_F12 (foreign-value "SDL_SCANCODE_F12" (enum SDL_Scancode)))
(define SDL_SCANCODE_PRINTSCREEN (foreign-value "SDL_SCANCODE_PRINTSCREEN" (enum SDL_Scancode)))
(define SDL_SCANCODE_SCROLLLOCK (foreign-value "SDL_SCANCODE_SCROLLLOCK" (enum SDL_Scancode)))
(define SDL_SCANCODE_PAUSE (foreign-value "SDL_SCANCODE_PAUSE" (enum SDL_Scancode)))
(define SDL_SCANCODE_INSERT (foreign-value "SDL_SCANCODE_INSERT" (enum SDL_Scancode)))
(define SDL_SCANCODE_HOME (foreign-value "SDL_SCANCODE_HOME" (enum SDL_Scancode)))
(define SDL_SCANCODE_PAGEUP (foreign-value "SDL_SCANCODE_PAGEUP" (enum SDL_Scancode)))
(define SDL_SCANCODE_DELETE (foreign-value "SDL_SCANCODE_DELETE" (enum SDL_Scancode)))
(define SDL_SCANCODE_END (foreign-value "SDL_SCANCODE_END" (enum SDL_Scancode)))
(define SDL_SCANCODE_PAGEDOWN (foreign-value "SDL_SCANCODE_PAGEDOWN" (enum SDL_Scancode)))
(define SDL_SCANCODE_RIGHT (foreign-value "SDL_SCANCODE_RIGHT" (enum SDL_Scancode)))
(define SDL_SCANCODE_LEFT (foreign-value "SDL_SCANCODE_LEFT" (enum SDL_Scancode)))
(define SDL_SCANCODE_DOWN (foreign-value "SDL_SCANCODE_DOWN" (enum SDL_Scancode)))
(define SDL_SCANCODE_UP (foreign-value "SDL_SCANCODE_UP" (enum SDL_Scancode)))
(define SDL_SCANCODE_NUMLOCKCLEAR (foreign-value "SDL_SCANCODE_NUMLOCKCLEAR" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_DIVIDE (foreign-value "SDL_SCANCODE_KP_DIVIDE" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_MULTIPLY (foreign-value "SDL_SCANCODE_KP_MULTIPLY" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_MINUS (foreign-value "SDL_SCANCODE_KP_MINUS" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_PLUS (foreign-value "SDL_SCANCODE_KP_PLUS" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_ENTER (foreign-value "SDL_SCANCODE_KP_ENTER" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_1 (foreign-value "SDL_SCANCODE_KP_1" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_2 (foreign-value "SDL_SCANCODE_KP_2" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_3 (foreign-value "SDL_SCANCODE_KP_3" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_4 (foreign-value "SDL_SCANCODE_KP_4" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_5 (foreign-value "SDL_SCANCODE_KP_5" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_6 (foreign-value "SDL_SCANCODE_KP_6" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_7 (foreign-value "SDL_SCANCODE_KP_7" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_8 (foreign-value "SDL_SCANCODE_KP_8" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_9 (foreign-value "SDL_SCANCODE_KP_9" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_0 (foreign-value "SDL_SCANCODE_KP_0" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_PERIOD (foreign-value "SDL_SCANCODE_KP_PERIOD" (enum SDL_Scancode)))
(define SDL_SCANCODE_NONUSBACKSLASH (foreign-value "SDL_SCANCODE_NONUSBACKSLASH" (enum SDL_Scancode)))
(define SDL_SCANCODE_APPLICATION (foreign-value "SDL_SCANCODE_APPLICATION" (enum SDL_Scancode)))
(define SDL_SCANCODE_POWER (foreign-value "SDL_SCANCODE_POWER" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_EQUALS (foreign-value "SDL_SCANCODE_KP_EQUALS" (enum SDL_Scancode)))
(define SDL_SCANCODE_F13 (foreign-value "SDL_SCANCODE_F13" (enum SDL_Scancode)))
(define SDL_SCANCODE_F14 (foreign-value "SDL_SCANCODE_F14" (enum SDL_Scancode)))
(define SDL_SCANCODE_F15 (foreign-value "SDL_SCANCODE_F15" (enum SDL_Scancode)))
(define SDL_SCANCODE_F16 (foreign-value "SDL_SCANCODE_F16" (enum SDL_Scancode)))
(define SDL_SCANCODE_F17 (foreign-value "SDL_SCANCODE_F17" (enum SDL_Scancode)))
(define SDL_SCANCODE_F18 (foreign-value "SDL_SCANCODE_F18" (enum SDL_Scancode)))
(define SDL_SCANCODE_F19 (foreign-value "SDL_SCANCODE_F19" (enum SDL_Scancode)))
(define SDL_SCANCODE_F20 (foreign-value "SDL_SCANCODE_F20" (enum SDL_Scancode)))
(define SDL_SCANCODE_F21 (foreign-value "SDL_SCANCODE_F21" (enum SDL_Scancode)))
(define SDL_SCANCODE_F22 (foreign-value "SDL_SCANCODE_F22" (enum SDL_Scancode)))
(define SDL_SCANCODE_F23 (foreign-value "SDL_SCANCODE_F23" (enum SDL_Scancode)))
(define SDL_SCANCODE_F24 (foreign-value "SDL_SCANCODE_F24" (enum SDL_Scancode)))
(define SDL_SCANCODE_EXECUTE (foreign-value "SDL_SCANCODE_EXECUTE" (enum SDL_Scancode)))
(define SDL_SCANCODE_HELP (foreign-value "SDL_SCANCODE_HELP" (enum SDL_Scancode)))
(define SDL_SCANCODE_MENU (foreign-value "SDL_SCANCODE_MENU" (enum SDL_Scancode)))
(define SDL_SCANCODE_SELECT (foreign-value "SDL_SCANCODE_SELECT" (enum SDL_Scancode)))
(define SDL_SCANCODE_STOP (foreign-value "SDL_SCANCODE_STOP" (enum SDL_Scancode)))
(define SDL_SCANCODE_AGAIN (foreign-value "SDL_SCANCODE_AGAIN" (enum SDL_Scancode)))
(define SDL_SCANCODE_UNDO (foreign-value "SDL_SCANCODE_UNDO" (enum SDL_Scancode)))
(define SDL_SCANCODE_CUT (foreign-value "SDL_SCANCODE_CUT" (enum SDL_Scancode)))
(define SDL_SCANCODE_COPY (foreign-value "SDL_SCANCODE_COPY" (enum SDL_Scancode)))
(define SDL_SCANCODE_PASTE (foreign-value "SDL_SCANCODE_PASTE" (enum SDL_Scancode)))
(define SDL_SCANCODE_FIND (foreign-value "SDL_SCANCODE_FIND" (enum SDL_Scancode)))
(define SDL_SCANCODE_MUTE (foreign-value "SDL_SCANCODE_MUTE" (enum SDL_Scancode)))
(define SDL_SCANCODE_VOLUMEUP (foreign-value "SDL_SCANCODE_VOLUMEUP" (enum SDL_Scancode)))
(define SDL_SCANCODE_VOLUMEDOWN (foreign-value "SDL_SCANCODE_VOLUMEDOWN" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_COMMA (foreign-value "SDL_SCANCODE_KP_COMMA" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_EQUALSAS400 (foreign-value "SDL_SCANCODE_KP_EQUALSAS400" (enum SDL_Scancode)))
(define SDL_SCANCODE_INTERNATIONAL1 (foreign-value "SDL_SCANCODE_INTERNATIONAL1" (enum SDL_Scancode)))
(define SDL_SCANCODE_INTERNATIONAL2 (foreign-value "SDL_SCANCODE_INTERNATIONAL2" (enum SDL_Scancode)))
(define SDL_SCANCODE_INTERNATIONAL3 (foreign-value "SDL_SCANCODE_INTERNATIONAL3" (enum SDL_Scancode)))
(define SDL_SCANCODE_INTERNATIONAL4 (foreign-value "SDL_SCANCODE_INTERNATIONAL4" (enum SDL_Scancode)))
(define SDL_SCANCODE_INTERNATIONAL5 (foreign-value "SDL_SCANCODE_INTERNATIONAL5" (enum SDL_Scancode)))
(define SDL_SCANCODE_INTERNATIONAL6 (foreign-value "SDL_SCANCODE_INTERNATIONAL6" (enum SDL_Scancode)))
(define SDL_SCANCODE_INTERNATIONAL7 (foreign-value "SDL_SCANCODE_INTERNATIONAL7" (enum SDL_Scancode)))
(define SDL_SCANCODE_INTERNATIONAL8 (foreign-value "SDL_SCANCODE_INTERNATIONAL8" (enum SDL_Scancode)))
(define SDL_SCANCODE_INTERNATIONAL9 (foreign-value "SDL_SCANCODE_INTERNATIONAL9" (enum SDL_Scancode)))
(define SDL_SCANCODE_LANG1 (foreign-value "SDL_SCANCODE_LANG1" (enum SDL_Scancode)))
(define SDL_SCANCODE_LANG2 (foreign-value "SDL_SCANCODE_LANG2" (enum SDL_Scancode)))
(define SDL_SCANCODE_LANG3 (foreign-value "SDL_SCANCODE_LANG3" (enum SDL_Scancode)))
(define SDL_SCANCODE_LANG4 (foreign-value "SDL_SCANCODE_LANG4" (enum SDL_Scancode)))
(define SDL_SCANCODE_LANG5 (foreign-value "SDL_SCANCODE_LANG5" (enum SDL_Scancode)))
(define SDL_SCANCODE_LANG6 (foreign-value "SDL_SCANCODE_LANG6" (enum SDL_Scancode)))
(define SDL_SCANCODE_LANG7 (foreign-value "SDL_SCANCODE_LANG7" (enum SDL_Scancode)))
(define SDL_SCANCODE_LANG8 (foreign-value "SDL_SCANCODE_LANG8" (enum SDL_Scancode)))
(define SDL_SCANCODE_LANG9 (foreign-value "SDL_SCANCODE_LANG9" (enum SDL_Scancode)))
(define SDL_SCANCODE_ALTERASE (foreign-value "SDL_SCANCODE_ALTERASE" (enum SDL_Scancode)))
(define SDL_SCANCODE_SYSREQ (foreign-value "SDL_SCANCODE_SYSREQ" (enum SDL_Scancode)))
(define SDL_SCANCODE_CANCEL (foreign-value "SDL_SCANCODE_CANCEL" (enum SDL_Scancode)))
(define SDL_SCANCODE_CLEAR (foreign-value "SDL_SCANCODE_CLEAR" (enum SDL_Scancode)))
(define SDL_SCANCODE_PRIOR (foreign-value "SDL_SCANCODE_PRIOR" (enum SDL_Scancode)))
(define SDL_SCANCODE_RETURN2 (foreign-value "SDL_SCANCODE_RETURN2" (enum SDL_Scancode)))
(define SDL_SCANCODE_SEPARATOR (foreign-value "SDL_SCANCODE_SEPARATOR" (enum SDL_Scancode)))
(define SDL_SCANCODE_OUT (foreign-value "SDL_SCANCODE_OUT" (enum SDL_Scancode)))
(define SDL_SCANCODE_OPER (foreign-value "SDL_SCANCODE_OPER" (enum SDL_Scancode)))
(define SDL_SCANCODE_CLEARAGAIN (foreign-value "SDL_SCANCODE_CLEARAGAIN" (enum SDL_Scancode)))
(define SDL_SCANCODE_CRSEL (foreign-value "SDL_SCANCODE_CRSEL" (enum SDL_Scancode)))
(define SDL_SCANCODE_EXSEL (foreign-value "SDL_SCANCODE_EXSEL" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_00 (foreign-value "SDL_SCANCODE_KP_00" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_000 (foreign-value "SDL_SCANCODE_KP_000" (enum SDL_Scancode)))
(define SDL_SCANCODE_THOUSANDSSEPARATOR (foreign-value "SDL_SCANCODE_THOUSANDSSEPARATOR" (enum SDL_Scancode)))
(define SDL_SCANCODE_DECIMALSEPARATOR (foreign-value "SDL_SCANCODE_DECIMALSEPARATOR" (enum SDL_Scancode)))
(define SDL_SCANCODE_CURRENCYUNIT (foreign-value "SDL_SCANCODE_CURRENCYUNIT" (enum SDL_Scancode)))
(define SDL_SCANCODE_CURRENCYSUBUNIT (foreign-value "SDL_SCANCODE_CURRENCYSUBUNIT" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_LEFTPAREN (foreign-value "SDL_SCANCODE_KP_LEFTPAREN" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_RIGHTPAREN (foreign-value "SDL_SCANCODE_KP_RIGHTPAREN" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_LEFTBRACE (foreign-value "SDL_SCANCODE_KP_LEFTBRACE" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_RIGHTBRACE (foreign-value "SDL_SCANCODE_KP_RIGHTBRACE" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_TAB (foreign-value "SDL_SCANCODE_KP_TAB" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_BACKSPACE (foreign-value "SDL_SCANCODE_KP_BACKSPACE" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_A (foreign-value "SDL_SCANCODE_KP_A" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_B (foreign-value "SDL_SCANCODE_KP_B" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_C (foreign-value "SDL_SCANCODE_KP_C" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_D (foreign-value "SDL_SCANCODE_KP_D" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_E (foreign-value "SDL_SCANCODE_KP_E" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_F (foreign-value "SDL_SCANCODE_KP_F" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_XOR (foreign-value "SDL_SCANCODE_KP_XOR" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_POWER (foreign-value "SDL_SCANCODE_KP_POWER" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_PERCENT (foreign-value "SDL_SCANCODE_KP_PERCENT" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_LESS (foreign-value "SDL_SCANCODE_KP_LESS" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_GREATER (foreign-value "SDL_SCANCODE_KP_GREATER" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_AMPERSAND (foreign-value "SDL_SCANCODE_KP_AMPERSAND" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_DBLAMPERSAND (foreign-value "SDL_SCANCODE_KP_DBLAMPERSAND" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_VERTICALBAR (foreign-value "SDL_SCANCODE_KP_VERTICALBAR" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_DBLVERTICALBAR (foreign-value "SDL_SCANCODE_KP_DBLVERTICALBAR" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_COLON (foreign-value "SDL_SCANCODE_KP_COLON" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_HASH (foreign-value "SDL_SCANCODE_KP_HASH" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_SPACE (foreign-value "SDL_SCANCODE_KP_SPACE" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_AT (foreign-value "SDL_SCANCODE_KP_AT" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_EXCLAM (foreign-value "SDL_SCANCODE_KP_EXCLAM" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_MEMSTORE (foreign-value "SDL_SCANCODE_KP_MEMSTORE" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_MEMRECALL (foreign-value "SDL_SCANCODE_KP_MEMRECALL" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_MEMCLEAR (foreign-value "SDL_SCANCODE_KP_MEMCLEAR" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_MEMADD (foreign-value "SDL_SCANCODE_KP_MEMADD" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_MEMSUBTRACT (foreign-value "SDL_SCANCODE_KP_MEMSUBTRACT" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_MEMMULTIPLY (foreign-value "SDL_SCANCODE_KP_MEMMULTIPLY" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_MEMDIVIDE (foreign-value "SDL_SCANCODE_KP_MEMDIVIDE" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_PLUSMINUS (foreign-value "SDL_SCANCODE_KP_PLUSMINUS" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_CLEAR (foreign-value "SDL_SCANCODE_KP_CLEAR" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_CLEARENTRY (foreign-value "SDL_SCANCODE_KP_CLEARENTRY" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_BINARY (foreign-value "SDL_SCANCODE_KP_BINARY" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_OCTAL (foreign-value "SDL_SCANCODE_KP_OCTAL" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_DECIMAL (foreign-value "SDL_SCANCODE_KP_DECIMAL" (enum SDL_Scancode)))
(define SDL_SCANCODE_KP_HEXADECIMAL (foreign-value "SDL_SCANCODE_KP_HEXADECIMAL" (enum SDL_Scancode)))
(define SDL_SCANCODE_LCTRL (foreign-value "SDL_SCANCODE_LCTRL" (enum SDL_Scancode)))
(define SDL_SCANCODE_LSHIFT (foreign-value "SDL_SCANCODE_LSHIFT" (enum SDL_Scancode)))
(define SDL_SCANCODE_LALT (foreign-value "SDL_SCANCODE_LALT" (enum SDL_Scancode)))
(define SDL_SCANCODE_LGUI (foreign-value "SDL_SCANCODE_LGUI" (enum SDL_Scancode)))
(define SDL_SCANCODE_RCTRL (foreign-value "SDL_SCANCODE_RCTRL" (enum SDL_Scancode)))
(define SDL_SCANCODE_RSHIFT (foreign-value "SDL_SCANCODE_RSHIFT" (enum SDL_Scancode)))
(define SDL_SCANCODE_RALT (foreign-value "SDL_SCANCODE_RALT" (enum SDL_Scancode)))
(define SDL_SCANCODE_RGUI (foreign-value "SDL_SCANCODE_RGUI" (enum SDL_Scancode)))
(define SDL_SCANCODE_MODE (foreign-value "SDL_SCANCODE_MODE" (enum SDL_Scancode)))
(define SDL_SCANCODE_SLEEP (foreign-value "SDL_SCANCODE_SLEEP" (enum SDL_Scancode)))
(define SDL_SCANCODE_WAKE (foreign-value "SDL_SCANCODE_WAKE" (enum SDL_Scancode)))
(define SDL_SCANCODE_CHANNEL_INCREMENT (foreign-value "SDL_SCANCODE_CHANNEL_INCREMENT" (enum SDL_Scancode)))
(define SDL_SCANCODE_CHANNEL_DECREMENT (foreign-value "SDL_SCANCODE_CHANNEL_DECREMENT" (enum SDL_Scancode)))
(define SDL_SCANCODE_MEDIA_PLAY (foreign-value "SDL_SCANCODE_MEDIA_PLAY" (enum SDL_Scancode)))
(define SDL_SCANCODE_MEDIA_PAUSE (foreign-value "SDL_SCANCODE_MEDIA_PAUSE" (enum SDL_Scancode)))
(define SDL_SCANCODE_MEDIA_RECORD (foreign-value "SDL_SCANCODE_MEDIA_RECORD" (enum SDL_Scancode)))
(define SDL_SCANCODE_MEDIA_FAST_FORWARD (foreign-value "SDL_SCANCODE_MEDIA_FAST_FORWARD" (enum SDL_Scancode)))
(define SDL_SCANCODE_MEDIA_REWIND (foreign-value "SDL_SCANCODE_MEDIA_REWIND" (enum SDL_Scancode)))
(define SDL_SCANCODE_MEDIA_NEXT_TRACK (foreign-value "SDL_SCANCODE_MEDIA_NEXT_TRACK" (enum SDL_Scancode)))
(define SDL_SCANCODE_MEDIA_PREVIOUS_TRACK (foreign-value "SDL_SCANCODE_MEDIA_PREVIOUS_TRACK" (enum SDL_Scancode)))
(define SDL_SCANCODE_MEDIA_STOP (foreign-value "SDL_SCANCODE_MEDIA_STOP" (enum SDL_Scancode)))
(define SDL_SCANCODE_MEDIA_EJECT (foreign-value "SDL_SCANCODE_MEDIA_EJECT" (enum SDL_Scancode)))
(define SDL_SCANCODE_MEDIA_PLAY_PAUSE (foreign-value "SDL_SCANCODE_MEDIA_PLAY_PAUSE" (enum SDL_Scancode)))
(define SDL_SCANCODE_MEDIA_SELECT (foreign-value "SDL_SCANCODE_MEDIA_SELECT" (enum SDL_Scancode)))
(define SDL_SCANCODE_AC_NEW (foreign-value "SDL_SCANCODE_AC_NEW" (enum SDL_Scancode)))
(define SDL_SCANCODE_AC_OPEN (foreign-value "SDL_SCANCODE_AC_OPEN" (enum SDL_Scancode)))
(define SDL_SCANCODE_AC_CLOSE (foreign-value "SDL_SCANCODE_AC_CLOSE" (enum SDL_Scancode)))
(define SDL_SCANCODE_AC_EXIT (foreign-value "SDL_SCANCODE_AC_EXIT" (enum SDL_Scancode)))
(define SDL_SCANCODE_AC_SAVE (foreign-value "SDL_SCANCODE_AC_SAVE" (enum SDL_Scancode)))
(define SDL_SCANCODE_AC_PRINT (foreign-value "SDL_SCANCODE_AC_PRINT" (enum SDL_Scancode)))
(define SDL_SCANCODE_AC_PROPERTIES (foreign-value "SDL_SCANCODE_AC_PROPERTIES" (enum SDL_Scancode)))
(define SDL_SCANCODE_AC_SEARCH (foreign-value "SDL_SCANCODE_AC_SEARCH" (enum SDL_Scancode)))
(define SDL_SCANCODE_AC_HOME (foreign-value "SDL_SCANCODE_AC_HOME" (enum SDL_Scancode)))
(define SDL_SCANCODE_AC_BACK (foreign-value "SDL_SCANCODE_AC_BACK" (enum SDL_Scancode)))
(define SDL_SCANCODE_AC_FORWARD (foreign-value "SDL_SCANCODE_AC_FORWARD" (enum SDL_Scancode)))
(define SDL_SCANCODE_AC_STOP (foreign-value "SDL_SCANCODE_AC_STOP" (enum SDL_Scancode)))
(define SDL_SCANCODE_AC_REFRESH (foreign-value "SDL_SCANCODE_AC_REFRESH" (enum SDL_Scancode)))
(define SDL_SCANCODE_AC_BOOKMARKS (foreign-value "SDL_SCANCODE_AC_BOOKMARKS" (enum SDL_Scancode)))
(define SDL_SCANCODE_SOFTLEFT (foreign-value "SDL_SCANCODE_SOFTLEFT" (enum SDL_Scancode)))
(define SDL_SCANCODE_SOFTRIGHT (foreign-value "SDL_SCANCODE_SOFTRIGHT" (enum SDL_Scancode)))
(define SDL_SCANCODE_CALL (foreign-value "SDL_SCANCODE_CALL" (enum SDL_Scancode)))
(define SDL_SCANCODE_ENDCALL (foreign-value "SDL_SCANCODE_ENDCALL" (enum SDL_Scancode)))
(define SDL_SCANCODE_RESERVED (foreign-value "SDL_SCANCODE_RESERVED" (enum SDL_Scancode)))
(define SDL_SCANCODE_COUNT (foreign-value "SDL_SCANCODE_COUNT" (enum SDL_Scancode)))

;; keycodes
(define SDLK_9 (foreign-value "SDLK_9" SDL_Keycode))
(define SDLK_EXTENDED_MASK (foreign-value "SDLK_EXTENDED_MASK" SDL_Keycode))
(define SDLK_SCANCODE_MASK (foreign-value "SDLK_SCANCODE_MASK" SDL_Keycode))
(define SDLK_UNKNOWN (foreign-value "SDLK_UNKNOWN" SDL_Keycode))
(define SDLK_RETURN (foreign-value "SDLK_RETURN" SDL_Keycode))
(define SDLK_ESCAPE (foreign-value "SDLK_ESCAPE" SDL_Keycode))
(define SDLK_BACKSPACE (foreign-value "SDLK_BACKSPACE" SDL_Keycode))
(define SDLK_TAB (foreign-value "SDLK_TAB" SDL_Keycode))
(define SDLK_SPACE (foreign-value "SDLK_SPACE" SDL_Keycode))
(define SDLK_EXCLAIM (foreign-value "SDLK_EXCLAIM" SDL_Keycode))
(define SDLK_DBLAPOSTROPHE (foreign-value "SDLK_DBLAPOSTROPHE" SDL_Keycode))
(define SDLK_HASH (foreign-value "SDLK_HASH" SDL_Keycode))
(define SDLK_DOLLAR (foreign-value "SDLK_DOLLAR" SDL_Keycode))
(define SDLK_PERCENT (foreign-value "SDLK_PERCENT" SDL_Keycode))
(define SDLK_AMPERSAND (foreign-value "SDLK_AMPERSAND" SDL_Keycode))
(define SDLK_APOSTROPHE (foreign-value "SDLK_APOSTROPHE" SDL_Keycode))
(define SDLK_LEFTPAREN (foreign-value "SDLK_LEFTPAREN" SDL_Keycode))
(define SDLK_RIGHTPAREN (foreign-value "SDLK_RIGHTPAREN" SDL_Keycode))
(define SDLK_ASTERISK (foreign-value "SDLK_ASTERISK" SDL_Keycode))
(define SDLK_PLUS (foreign-value "SDLK_PLUS" SDL_Keycode))
(define SDLK_COMMA (foreign-value "SDLK_COMMA" SDL_Keycode))
(define SDLK_MINUS (foreign-value "SDLK_MINUS" SDL_Keycode))
(define SDLK_PERIOD (foreign-value "SDLK_PERIOD" SDL_Keycode))
(define SDLK_SLASH (foreign-value "SDLK_SLASH" SDL_Keycode))
(define SDLK_0 (foreign-value "SDLK_0" SDL_Keycode))
(define SDLK_1 (foreign-value "SDLK_1" SDL_Keycode))
(define SDLK_2 (foreign-value "SDLK_2" SDL_Keycode))
(define SDLK_3 (foreign-value "SDLK_3" SDL_Keycode))
(define SDLK_4 (foreign-value "SDLK_4" SDL_Keycode))
(define SDLK_5 (foreign-value "SDLK_5" SDL_Keycode))
(define SDLK_6 (foreign-value "SDLK_6" SDL_Keycode))
(define SDLK_7 (foreign-value "SDLK_7" SDL_Keycode))
(define SDLK_8 (foreign-value "SDLK_8" SDL_Keycode))
(define SDLK_9 (foreign-value "SDLK_9" SDL_Keycode))
(define SDLK_COLON (foreign-value "SDLK_COLON" SDL_Keycode))
(define SDLK_SEMICOLON (foreign-value "SDLK_SEMICOLON" SDL_Keycode))
(define SDLK_LESS (foreign-value "SDLK_LESS" SDL_Keycode))
(define SDLK_EQUALS (foreign-value "SDLK_EQUALS" SDL_Keycode))
(define SDLK_GREATER (foreign-value "SDLK_GREATER" SDL_Keycode))
(define SDLK_QUESTION (foreign-value "SDLK_QUESTION" SDL_Keycode))
(define SDLK_AT (foreign-value "SDLK_AT" SDL_Keycode))
(define SDLK_LEFTBRACKET (foreign-value "SDLK_LEFTBRACKET" SDL_Keycode))
(define SDLK_BACKSLASH (foreign-value "SDLK_BACKSLASH" SDL_Keycode))
(define SDLK_RIGHTBRACKET (foreign-value "SDLK_RIGHTBRACKET" SDL_Keycode))
(define SDLK_CARET (foreign-value "SDLK_CARET" SDL_Keycode))
(define SDLK_UNDERSCORE (foreign-value "SDLK_UNDERSCORE" SDL_Keycode))
(define SDLK_GRAVE (foreign-value "SDLK_GRAVE" SDL_Keycode))
(define SDLK_A (foreign-value "SDLK_A" SDL_Keycode))
(define SDLK_B (foreign-value "SDLK_B" SDL_Keycode))
(define SDLK_C (foreign-value "SDLK_C" SDL_Keycode))
(define SDLK_D (foreign-value "SDLK_D" SDL_Keycode))
(define SDLK_E (foreign-value "SDLK_E" SDL_Keycode))
(define SDLK_F (foreign-value "SDLK_F" SDL_Keycode))
(define SDLK_G (foreign-value "SDLK_G" SDL_Keycode))
(define SDLK_H (foreign-value "SDLK_H" SDL_Keycode))
(define SDLK_I (foreign-value "SDLK_I" SDL_Keycode))
(define SDLK_J (foreign-value "SDLK_J" SDL_Keycode))
(define SDLK_K (foreign-value "SDLK_K" SDL_Keycode))
(define SDLK_L (foreign-value "SDLK_L" SDL_Keycode))
(define SDLK_M (foreign-value "SDLK_M" SDL_Keycode))
(define SDLK_N (foreign-value "SDLK_N" SDL_Keycode))
(define SDLK_O (foreign-value "SDLK_O" SDL_Keycode))
(define SDLK_P (foreign-value "SDLK_P" SDL_Keycode))
(define SDLK_Q (foreign-value "SDLK_Q" SDL_Keycode))
(define SDLK_R (foreign-value "SDLK_R" SDL_Keycode))
(define SDLK_S (foreign-value "SDLK_S" SDL_Keycode))
(define SDLK_T (foreign-value "SDLK_T" SDL_Keycode))
(define SDLK_U (foreign-value "SDLK_U" SDL_Keycode))
(define SDLK_V (foreign-value "SDLK_V" SDL_Keycode))
(define SDLK_W (foreign-value "SDLK_W" SDL_Keycode))
(define SDLK_X (foreign-value "SDLK_X" SDL_Keycode))
(define SDLK_Y (foreign-value "SDLK_Y" SDL_Keycode))
(define SDLK_Z (foreign-value "SDLK_Z" SDL_Keycode))
(define SDLK_LEFTBRACE (foreign-value "SDLK_LEFTBRACE" SDL_Keycode))
(define SDLK_PIPE (foreign-value "SDLK_PIPE" SDL_Keycode))
(define SDLK_RIGHTBRACE (foreign-value "SDLK_RIGHTBRACE" SDL_Keycode))
(define SDLK_TILDE (foreign-value "SDLK_TILDE" SDL_Keycode))
(define SDLK_DELETE (foreign-value "SDLK_DELETE" SDL_Keycode))
(define SDLK_PLUSMINUS (foreign-value "SDLK_PLUSMINUS" SDL_Keycode))
(define SDLK_CAPSLOCK (foreign-value "SDLK_CAPSLOCK" SDL_Keycode))
(define SDLK_F1 (foreign-value "SDLK_F1" SDL_Keycode))
(define SDLK_F2 (foreign-value "SDLK_F2" SDL_Keycode))
(define SDLK_F3 (foreign-value "SDLK_F3" SDL_Keycode))
(define SDLK_F4 (foreign-value "SDLK_F4" SDL_Keycode))
(define SDLK_F5 (foreign-value "SDLK_F5" SDL_Keycode))
(define SDLK_F6 (foreign-value "SDLK_F6" SDL_Keycode))
(define SDLK_F7 (foreign-value "SDLK_F7" SDL_Keycode))
(define SDLK_F8 (foreign-value "SDLK_F8" SDL_Keycode))
(define SDLK_F9 (foreign-value "SDLK_F9" SDL_Keycode))
(define SDLK_F10 (foreign-value "SDLK_F10" SDL_Keycode))
(define SDLK_F11 (foreign-value "SDLK_F11" SDL_Keycode))
(define SDLK_F12 (foreign-value "SDLK_F12" SDL_Keycode))
(define SDLK_PRINTSCREEN (foreign-value "SDLK_PRINTSCREEN" SDL_Keycode))
(define SDLK_SCROLLLOCK (foreign-value "SDLK_SCROLLLOCK" SDL_Keycode))
(define SDLK_PAUSE (foreign-value "SDLK_PAUSE" SDL_Keycode))
(define SDLK_INSERT (foreign-value "SDLK_INSERT" SDL_Keycode))
(define SDLK_HOME (foreign-value "SDLK_HOME" SDL_Keycode))
(define SDLK_PAGEUP (foreign-value "SDLK_PAGEUP" SDL_Keycode))
(define SDLK_END (foreign-value "SDLK_END" SDL_Keycode))
(define SDLK_PAGEDOWN (foreign-value "SDLK_PAGEDOWN" SDL_Keycode))
(define SDLK_RIGHT (foreign-value "SDLK_RIGHT" SDL_Keycode))
(define SDLK_LEFT (foreign-value "SDLK_LEFT" SDL_Keycode))
(define SDLK_DOWN (foreign-value "SDLK_DOWN" SDL_Keycode))
(define SDLK_UP (foreign-value "SDLK_UP" SDL_Keycode))
(define SDLK_NUMLOCKCLEAR (foreign-value "SDLK_NUMLOCKCLEAR" SDL_Keycode))
(define SDLK_KP_DIVIDE (foreign-value "SDLK_KP_DIVIDE" SDL_Keycode))
(define SDLK_KP_MULTIPLY (foreign-value "SDLK_KP_MULTIPLY" SDL_Keycode))
(define SDLK_KP_MINUS (foreign-value "SDLK_KP_MINUS" SDL_Keycode))
(define SDLK_KP_PLUS (foreign-value "SDLK_KP_PLUS" SDL_Keycode))
(define SDLK_KP_ENTER (foreign-value "SDLK_KP_ENTER" SDL_Keycode))
(define SDLK_KP_1 (foreign-value "SDLK_KP_1" SDL_Keycode))
(define SDLK_KP_2 (foreign-value "SDLK_KP_2" SDL_Keycode))
(define SDLK_KP_3 (foreign-value "SDLK_KP_3" SDL_Keycode))
(define SDLK_KP_4 (foreign-value "SDLK_KP_4" SDL_Keycode))
(define SDLK_KP_5 (foreign-value "SDLK_KP_5" SDL_Keycode))
(define SDLK_KP_6 (foreign-value "SDLK_KP_6" SDL_Keycode))
(define SDLK_KP_7 (foreign-value "SDLK_KP_7" SDL_Keycode))
(define SDLK_KP_8 (foreign-value "SDLK_KP_8" SDL_Keycode))
(define SDLK_KP_9 (foreign-value "SDLK_KP_9" SDL_Keycode))
(define SDLK_KP_0 (foreign-value "SDLK_KP_0" SDL_Keycode))
(define SDLK_KP_PERIOD (foreign-value "SDLK_KP_PERIOD" SDL_Keycode))
(define SDLK_APPLICATION (foreign-value "SDLK_APPLICATION" SDL_Keycode))
(define SDLK_POWER (foreign-value "SDLK_POWER" SDL_Keycode))
(define SDLK_KP_EQUALS (foreign-value "SDLK_KP_EQUALS" SDL_Keycode))
(define SDLK_F13 (foreign-value "SDLK_F13" SDL_Keycode))
(define SDLK_F14 (foreign-value "SDLK_F14" SDL_Keycode))
(define SDLK_F15 (foreign-value "SDLK_F15" SDL_Keycode))
(define SDLK_F16 (foreign-value "SDLK_F16" SDL_Keycode))
(define SDLK_F17 (foreign-value "SDLK_F17" SDL_Keycode))
(define SDLK_F18 (foreign-value "SDLK_F18" SDL_Keycode))
(define SDLK_F19 (foreign-value "SDLK_F19" SDL_Keycode))
(define SDLK_F20 (foreign-value "SDLK_F20" SDL_Keycode))
(define SDLK_F21 (foreign-value "SDLK_F21" SDL_Keycode))
(define SDLK_F22 (foreign-value "SDLK_F22" SDL_Keycode))
(define SDLK_F23 (foreign-value "SDLK_F23" SDL_Keycode))
(define SDLK_F24 (foreign-value "SDLK_F24" SDL_Keycode))
(define SDLK_EXECUTE (foreign-value "SDLK_EXECUTE" SDL_Keycode))
(define SDLK_HELP (foreign-value "SDLK_HELP" SDL_Keycode))
(define SDLK_MENU (foreign-value "SDLK_MENU" SDL_Keycode))
(define SDLK_SELECT (foreign-value "SDLK_SELECT" SDL_Keycode))
(define SDLK_STOP (foreign-value "SDLK_STOP" SDL_Keycode))
(define SDLK_AGAIN (foreign-value "SDLK_AGAIN" SDL_Keycode))
(define SDLK_UNDO (foreign-value "SDLK_UNDO" SDL_Keycode))
(define SDLK_CUT (foreign-value "SDLK_CUT" SDL_Keycode))
(define SDLK_COPY (foreign-value "SDLK_COPY" SDL_Keycode))
(define SDLK_PASTE (foreign-value "SDLK_PASTE" SDL_Keycode))
(define SDLK_FIND (foreign-value "SDLK_FIND" SDL_Keycode))
(define SDLK_MUTE (foreign-value "SDLK_MUTE" SDL_Keycode))
(define SDLK_VOLUMEUP (foreign-value "SDLK_VOLUMEUP" SDL_Keycode))
(define SDLK_VOLUMEDOWN (foreign-value "SDLK_VOLUMEDOWN" SDL_Keycode))
(define SDLK_KP_COMMA (foreign-value "SDLK_KP_COMMA" SDL_Keycode))
(define SDLK_KP_EQUALSAS400 (foreign-value "SDLK_KP_EQUALSAS400" SDL_Keycode))
(define SDLK_ALTERASE (foreign-value "SDLK_ALTERASE" SDL_Keycode))
(define SDLK_SYSREQ (foreign-value "SDLK_SYSREQ" SDL_Keycode))
(define SDLK_CANCEL (foreign-value "SDLK_CANCEL" SDL_Keycode))
(define SDLK_CLEAR (foreign-value "SDLK_CLEAR" SDL_Keycode))
(define SDLK_PRIOR (foreign-value "SDLK_PRIOR" SDL_Keycode))
(define SDLK_RETURN2 (foreign-value "SDLK_RETURN2" SDL_Keycode))
(define SDLK_SEPARATOR (foreign-value "SDLK_SEPARATOR" SDL_Keycode))
(define SDLK_OUT (foreign-value "SDLK_OUT" SDL_Keycode))
(define SDLK_OPER (foreign-value "SDLK_OPER" SDL_Keycode))
(define SDLK_CLEARAGAIN (foreign-value "SDLK_CLEARAGAIN" SDL_Keycode))
(define SDLK_CRSEL (foreign-value "SDLK_CRSEL" SDL_Keycode))
(define SDLK_EXSEL (foreign-value "SDLK_EXSEL" SDL_Keycode))
(define SDLK_KP_00 (foreign-value "SDLK_KP_00" SDL_Keycode))
(define SDLK_KP_000 (foreign-value "SDLK_KP_000" SDL_Keycode))
(define SDLK_THOUSANDSSEPARATOR (foreign-value "SDLK_THOUSANDSSEPARATOR" SDL_Keycode))
(define SDLK_DECIMALSEPARATOR (foreign-value "SDLK_DECIMALSEPARATOR" SDL_Keycode))
(define SDLK_CURRENCYUNIT (foreign-value "SDLK_CURRENCYUNIT" SDL_Keycode))
(define SDLK_CURRENCYSUBUNIT (foreign-value "SDLK_CURRENCYSUBUNIT" SDL_Keycode))
(define SDLK_KP_LEFTPAREN (foreign-value "SDLK_KP_LEFTPAREN" SDL_Keycode))
(define SDLK_KP_RIGHTPAREN (foreign-value "SDLK_KP_RIGHTPAREN" SDL_Keycode))
(define SDLK_KP_LEFTBRACE (foreign-value "SDLK_KP_LEFTBRACE" SDL_Keycode))
(define SDLK_KP_RIGHTBRACE (foreign-value "SDLK_KP_RIGHTBRACE" SDL_Keycode))
(define SDLK_KP_TAB (foreign-value "SDLK_KP_TAB" SDL_Keycode))
(define SDLK_KP_BACKSPACE (foreign-value "SDLK_KP_BACKSPACE" SDL_Keycode))
(define SDLK_KP_A (foreign-value "SDLK_KP_A" SDL_Keycode))
(define SDLK_KP_B (foreign-value "SDLK_KP_B" SDL_Keycode))
(define SDLK_KP_C (foreign-value "SDLK_KP_C" SDL_Keycode))
(define SDLK_KP_D (foreign-value "SDLK_KP_D" SDL_Keycode))
(define SDLK_KP_E (foreign-value "SDLK_KP_E" SDL_Keycode))
(define SDLK_KP_F (foreign-value "SDLK_KP_F" SDL_Keycode))
(define SDLK_KP_XOR (foreign-value "SDLK_KP_XOR" SDL_Keycode))
(define SDLK_KP_POWER (foreign-value "SDLK_KP_POWER" SDL_Keycode))
(define SDLK_KP_PERCENT (foreign-value "SDLK_KP_PERCENT" SDL_Keycode))
(define SDLK_KP_LESS (foreign-value "SDLK_KP_LESS" SDL_Keycode))
(define SDLK_KP_GREATER (foreign-value "SDLK_KP_GREATER" SDL_Keycode))
(define SDLK_KP_AMPERSAND (foreign-value "SDLK_KP_AMPERSAND" SDL_Keycode))
(define SDLK_KP_DBLAMPERSAND (foreign-value "SDLK_KP_DBLAMPERSAND" SDL_Keycode))
(define SDLK_KP_VERTICALBAR (foreign-value "SDLK_KP_VERTICALBAR" SDL_Keycode))
(define SDLK_KP_DBLVERTICALBAR (foreign-value "SDLK_KP_DBLVERTICALBAR" SDL_Keycode))
(define SDLK_KP_COLON (foreign-value "SDLK_KP_COLON" SDL_Keycode))
(define SDLK_KP_HASH (foreign-value "SDLK_KP_HASH" SDL_Keycode))
(define SDLK_KP_SPACE (foreign-value "SDLK_KP_SPACE" SDL_Keycode))
(define SDLK_KP_AT (foreign-value "SDLK_KP_AT" SDL_Keycode))
(define SDLK_KP_EXCLAM (foreign-value "SDLK_KP_EXCLAM" SDL_Keycode))
(define SDLK_KP_MEMSTORE (foreign-value "SDLK_KP_MEMSTORE" SDL_Keycode))
(define SDLK_KP_MEMRECALL (foreign-value "SDLK_KP_MEMRECALL" SDL_Keycode))
(define SDLK_KP_MEMCLEAR (foreign-value "SDLK_KP_MEMCLEAR" SDL_Keycode))
(define SDLK_KP_MEMADD (foreign-value "SDLK_KP_MEMADD" SDL_Keycode))
(define SDLK_KP_MEMSUBTRACT (foreign-value "SDLK_KP_MEMSUBTRACT" SDL_Keycode))
(define SDLK_KP_MEMMULTIPLY (foreign-value "SDLK_KP_MEMMULTIPLY" SDL_Keycode))
(define SDLK_KP_MEMDIVIDE (foreign-value "SDLK_KP_MEMDIVIDE" SDL_Keycode))
(define SDLK_KP_PLUSMINUS (foreign-value "SDLK_KP_PLUSMINUS" SDL_Keycode))
(define SDLK_KP_CLEAR (foreign-value "SDLK_KP_CLEAR" SDL_Keycode))
(define SDLK_KP_CLEARENTRY (foreign-value "SDLK_KP_CLEARENTRY" SDL_Keycode))
(define SDLK_KP_BINARY (foreign-value "SDLK_KP_BINARY" SDL_Keycode))
(define SDLK_KP_OCTAL (foreign-value "SDLK_KP_OCTAL" SDL_Keycode))
(define SDLK_KP_DECIMAL (foreign-value "SDLK_KP_DECIMAL" SDL_Keycode))
(define SDLK_KP_HEXADECIMAL (foreign-value "SDLK_KP_HEXADECIMAL" SDL_Keycode))
(define SDLK_LCTRL (foreign-value "SDLK_LCTRL" SDL_Keycode))
(define SDLK_LSHIFT (foreign-value "SDLK_LSHIFT" SDL_Keycode))
(define SDLK_LALT (foreign-value "SDLK_LALT" SDL_Keycode))
(define SDLK_LGUI (foreign-value "SDLK_LGUI" SDL_Keycode))
(define SDLK_RCTRL (foreign-value "SDLK_RCTRL" SDL_Keycode))
(define SDLK_RSHIFT (foreign-value "SDLK_RSHIFT" SDL_Keycode))
(define SDLK_RALT (foreign-value "SDLK_RALT" SDL_Keycode))
(define SDLK_RGUI (foreign-value "SDLK_RGUI" SDL_Keycode))
(define SDLK_MODE (foreign-value "SDLK_MODE" SDL_Keycode))
(define SDLK_SLEEP (foreign-value "SDLK_SLEEP" SDL_Keycode))
(define SDLK_WAKE (foreign-value "SDLK_WAKE" SDL_Keycode))
(define SDLK_CHANNEL_INCREMENT (foreign-value "SDLK_CHANNEL_INCREMENT" SDL_Keycode))
(define SDLK_CHANNEL_DECREMENT (foreign-value "SDLK_CHANNEL_DECREMENT" SDL_Keycode))
(define SDLK_MEDIA_PLAY (foreign-value "SDLK_MEDIA_PLAY" SDL_Keycode))
(define SDLK_MEDIA_PAUSE (foreign-value "SDLK_MEDIA_PAUSE" SDL_Keycode))
(define SDLK_MEDIA_RECORD (foreign-value "SDLK_MEDIA_RECORD" SDL_Keycode))
(define SDLK_MEDIA_FAST_FORWARD (foreign-value "SDLK_MEDIA_FAST_FORWARD" SDL_Keycode))
(define SDLK_MEDIA_REWIND (foreign-value "SDLK_MEDIA_REWIND" SDL_Keycode))
(define SDLK_MEDIA_NEXT_TRACK (foreign-value "SDLK_MEDIA_NEXT_TRACK" SDL_Keycode))
(define SDLK_MEDIA_PREVIOUS_TRACK (foreign-value "SDLK_MEDIA_PREVIOUS_TRACK" SDL_Keycode))
(define SDLK_MEDIA_STOP (foreign-value "SDLK_MEDIA_STOP" SDL_Keycode))
(define SDLK_MEDIA_EJECT (foreign-value "SDLK_MEDIA_EJECT" SDL_Keycode))
(define SDLK_MEDIA_PLAY_PAUSE (foreign-value "SDLK_MEDIA_PLAY_PAUSE" SDL_Keycode))
(define SDLK_MEDIA_SELECT (foreign-value "SDLK_MEDIA_SELECT" SDL_Keycode))
(define SDLK_AC_NEW (foreign-value "SDLK_AC_NEW" SDL_Keycode))
(define SDLK_AC_OPEN (foreign-value "SDLK_AC_OPEN" SDL_Keycode))
(define SDLK_AC_CLOSE (foreign-value "SDLK_AC_CLOSE" SDL_Keycode))
(define SDLK_AC_EXIT (foreign-value "SDLK_AC_EXIT" SDL_Keycode))
(define SDLK_AC_SAVE (foreign-value "SDLK_AC_SAVE" SDL_Keycode))
(define SDLK_AC_PRINT (foreign-value "SDLK_AC_PRINT" SDL_Keycode))
(define SDLK_AC_PROPERTIES (foreign-value "SDLK_AC_PROPERTIES" SDL_Keycode))
(define SDLK_AC_SEARCH (foreign-value "SDLK_AC_SEARCH" SDL_Keycode))
(define SDLK_AC_HOME (foreign-value "SDLK_AC_HOME" SDL_Keycode))
(define SDLK_AC_BACK (foreign-value "SDLK_AC_BACK" SDL_Keycode))
(define SDLK_AC_FORWARD (foreign-value "SDLK_AC_FORWARD" SDL_Keycode))
(define SDLK_AC_STOP (foreign-value "SDLK_AC_STOP" SDL_Keycode))
(define SDLK_AC_REFRESH (foreign-value "SDLK_AC_REFRESH" SDL_Keycode))
(define SDLK_AC_BOOKMARKS (foreign-value "SDLK_AC_BOOKMARKS" SDL_Keycode))
(define SDLK_SOFTLEFT (foreign-value "SDLK_SOFTLEFT" SDL_Keycode))
(define SDLK_SOFTRIGHT (foreign-value "SDLK_SOFTRIGHT" SDL_Keycode))
(define SDLK_CALL (foreign-value "SDLK_CALL" SDL_Keycode))
(define SDLK_ENDCALL (foreign-value "SDLK_ENDCALL" SDL_Keycode))
(define SDLK_LEFT_TAB (foreign-value "SDLK_LEFT_TAB" SDL_Keycode))
(define SDLK_LEVEL5_SHIFT (foreign-value "SDLK_LEVEL5_SHIFT" SDL_Keycode))
(define SDLK_MULTI_KEY_COMPOSE (foreign-value "SDLK_MULTI_KEY_COMPOSE" SDL_Keycode))
(define SDLK_LMETA (foreign-value "SDLK_LMETA" SDL_Keycode))
(define SDLK_RMETA (foreign-value "SDLK_RMETA" SDL_Keycode))
(define SDLK_LHYPER (foreign-value "SDLK_LHYPER" SDL_Keycode))
(define SDLK_RHYPER (foreign-value "SDLK_RHYPER" SDL_Keycode))

;; keymods
(define SDL_KMOD_NONE (foreign-value "SDL_KMOD_NONE" SDL_Keymod))
(define SDL_KMOD_LSHIFT (foreign-value "SDL_KMOD_LSHIFT" SDL_Keymod))
(define SDL_KMOD_RSHIFT (foreign-value "SDL_KMOD_RSHIFT" SDL_Keymod))
(define SDL_KMOD_LEVEL5 (foreign-value "SDL_KMOD_LEVEL5" SDL_Keymod))
(define SDL_KMOD_LCTRL (foreign-value "SDL_KMOD_LCTRL" SDL_Keymod))
(define SDL_KMOD_RCTRL (foreign-value "SDL_KMOD_RCTRL" SDL_Keymod))
(define SDL_KMOD_LALT (foreign-value "SDL_KMOD_LALT" SDL_Keymod))
(define SDL_KMOD_RALT (foreign-value "SDL_KMOD_RALT" SDL_Keymod))
(define SDL_KMOD_LGUI (foreign-value "SDL_KMOD_LGUI" SDL_Keymod))
(define SDL_KMOD_RGUI (foreign-value "SDL_KMOD_RGUI" SDL_Keymod))
(define SDL_KMOD_NUM (foreign-value "SDL_KMOD_NUM" SDL_Keymod))
(define SDL_KMOD_CAPS (foreign-value "SDL_KMOD_CAPS" SDL_Keymod))
(define SDL_KMOD_MODE (foreign-value "SDL_KMOD_MODE" SDL_Keymod))
(define SDL_KMOD_SCROLL (foreign-value "SDL_KMOD_SCROLL" SDL_Keymod))
(define SDL_KMOD_LCTRL (foreign-value "SDL_KMOD_LCTRL" SDL_Keymod))
(define SDL_KMOD_LSHIFT (foreign-value "SDL_KMOD_LSHIFT" SDL_Keymod))
(define SDL_KMOD_LALT (foreign-value "SDL_KMOD_LALT" SDL_Keymod))
(define SDL_KMOD_LGUI (foreign-value "SDL_KMOD_LGUI" SDL_Keymod))

(define-SDL_Event-getter SDL_WindowID (key windowID))
(define-SDL_Event-getter SDL_KeyboardID (key which))
(define-SDL_Event-getter (enum SDL_Scancode) (key scancode))
(define-SDL_Event-getter SDL_Keycode (key key))
(define-SDL_Event-getter SDL_Keymod (key mod))
(define-SDL_Event-getter unsigned-short (key raw))
(define-SDL_Event-getter bool (key down))
(define-SDL_Event-getter bool (key repeat))

;; =============================================================================
;; time stuff
;; =============================================================================

(define-foreign-type SDL_Time integer64)
(define-foreign-type SDL_Time* s64vector)

(define SDL_GetCurrentTime (foreign-lambda bool SDL_GetCurrentTime SDL_Time*))

(define (SDL_GetCurrentTime/ret #!optional (store (s64vector 4)))
  (and (SDL_GetCurrentTime store)
       store))

(define SDL_GetTicks (foreign-lambda unsigned-integer64 SDL_GetTicks))
(define SDL_Delay (foreign-lambda void SDL_Delay unsigned-integer32))

)
